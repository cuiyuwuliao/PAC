/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ghost;

import java.util.*;
import java.io.*;
import processing.core.*;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.assertAll;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTimeout;
import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;


class PlayerTest{
    Resources r = new Resources("simpleMap.json");
    Engine game = r.game;
    Player p1 = game.p1;

    @BeforeEach
    public void setup(){
        p1.reset(game);
    }

    @Test
    public void constructor(){

        assertThrows(RuntimeException.class, () ->{
            Player test = new Player(null, 10, 10);
        });

        PImage testimg = null;
        List<PImage> testimgs = new ArrayList<PImage>();
        testimgs.add(testimg);
        testimgs.add(testimg);
        testimgs.add(testimg);
        assertThrows(RuntimeException.class, () ->{
            Player test = new Player(testimgs, 10, 10);
        });
        testimgs.add(testimg);
        testimgs.add(testimg);
        Player test = new Player(testimgs,10,10);
        assertNotNull(test);
        assertEquals(test.firstMove, true);
    }

    @Test
    public void simpleMethods(){
        //setLives()
        p1.setLives(99);
        assertEquals(p1.lives, 99);
        assertEquals(p1.maxLives, 99);
        p1.setLives(-99);
        assertEquals(p1.lives, 0);
        assertEquals(p1.maxLives, 0);
        //setGoing()
        p1.setGoing(Dir.up);
        assertEquals(p1.going, Dir.up);
        p1.setGoing(null);
        assertEquals(p1.going, null);
    }






   
    
}
