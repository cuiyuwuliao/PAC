/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ghost;

import java.util.*;
import java.io.*;
import processing.core.*;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.assertAll;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTimeout;
import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;
import static org.junit.jupiter.api.Assertions.assertTrue;

class ConfigTest {
    Config c = new Config("src/test/resources/configTest.json");

    @Test 
    public void simpleData(){
        assertEquals(c.lives, 3);
        assertEquals(c.speed, 2);
        assertEquals(c.panicLength, 7);
        List<Integer> expectedModeLengths = new ArrayList<Integer>();
        Collections.addAll(expectedModeLengths, 2, 2);
        assertEquals(expectedModeLengths,c.modeLengths);
        
    }
    @Test
    public void map(){
        // simple map loaded correctly
        List<List<String>> expected = new ArrayList<List<String>>();
        List<String> line1 = new ArrayList<String>();
        List<String> line2 = new ArrayList<String>();
        Collections.addAll(line1, "0", "1", "2", "3", "4", "5");
        Collections.addAll(line2, "a", "c", "i", "w", "7", "8");
        Collections.addAll(expected, line1, line2);
        assertEquals(expected, c.map);
    }
    @Test
    public void Exception(){
        // exeption thrown for wrong config or map name
        assertThrows(RuntimeException.class, () ->{
            Config cc = new Config("src/test/resources/doesNotExist.json");
        });
        assertThrows(RuntimeException.class, () ->{
            Config cc = new Config("src/test/resources/InvalidMap.json");
        });
    }
    
}
